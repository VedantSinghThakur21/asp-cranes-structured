version: '3.8'
services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: crmdb@21
      POSTGRES_DB: asp_crm
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./crm-app/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  backend:
    build:
      context: ./crm-app/backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: asp_crm
      DB_USER: postgres
      DB_PASSWORD: crmdb@21
      JWT_SECRET: brnpGhQa2G1JlQ+RA69ki0vJCc3Bb/a8jKC7FGBn5Y5EuBwlAKmcXx+BRkagkIUDrC/3Liup0WDgZxvLz0EmrQ==
      JWT_REFRESH_SECRET: PIPQdZjRjyZ33EPA0SMl+PCNvZTFf5yyh47Bfwyh2fTr0JVmX5poEZ2S8+H7/99Ph0toIwOWQhBFMgUONvcZeQ==
      JWT_ACCESS_TOKEN_EXPIRY: 15m
      JWT_REFRESH_TOKEN_EXPIRY: 7d
      SESSION_SECRET: KYozTqin2gKmQIZZMHh6iVAApporQwYXbpBJVIHmPtY=
      CORS_ORIGIN: http://103.224.243.242:3000
      LOG_LEVEL: info
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      # CrewAI Configuration
      CREWAI_API_URL: https://asp-cranes-ai-sales-chatbot-v1-19ac7cde-f23-cb712937.crewai.com
      CREWAI_API_TOKEN: 323534e6cfe2
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped


  frontend:
    build:
      context: ./crm-app/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      VITE_API_URL: http://103.224.243.242:3001/api
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  postgres_data:
